//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18047
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mvc2Fundamentals.EmployeeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/WCF_firstService")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc2Fundamentals.EmployeeService.Department DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc2Fundamentals.EmployeeService.Department Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((this.DepartmentField.Equals(value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Forename {
            get {
                return this.ForenameField;
            }
            set {
                if ((object.ReferenceEquals(this.ForenameField, value) != true)) {
                    this.ForenameField = value;
                    this.RaisePropertyChanged("Forename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Department", Namespace="http://schemas.datacontract.org/2004/07/WCF_firstService")]
    public enum Department : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manager = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShelfFiller = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Checkout = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeeService.IEmployeeService")]
    public interface IEmployeeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetAll", ReplyAction="http://tempuri.org/IEmployeeService/GetAllResponse")]
        System.Collections.Generic.List<Mvc2Fundamentals.EmployeeService.Employee> GetAll();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEmployeeService/GetAll", ReplyAction="http://tempuri.org/IEmployeeService/GetAllResponse")]
        System.IAsyncResult BeginGetAll(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Mvc2Fundamentals.EmployeeService.Employee> EndGetAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetEmployeeById", ReplyAction="http://tempuri.org/IEmployeeService/GetEmployeeByIdResponse")]
        Mvc2Fundamentals.EmployeeService.Employee GetEmployeeById(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEmployeeService/GetEmployeeById", ReplyAction="http://tempuri.org/IEmployeeService/GetEmployeeByIdResponse")]
        System.IAsyncResult BeginGetEmployeeById(System.Guid id, System.AsyncCallback callback, object asyncState);
        
        Mvc2Fundamentals.EmployeeService.Employee EndGetEmployeeById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/AddEmployee", ReplyAction="http://tempuri.org/IEmployeeService/AddEmployeeResponse")]
        void AddEmployee(Mvc2Fundamentals.EmployeeService.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEmployeeService/AddEmployee", ReplyAction="http://tempuri.org/IEmployeeService/AddEmployeeResponse")]
        System.IAsyncResult BeginAddEmployee(Mvc2Fundamentals.EmployeeService.Employee employee, System.AsyncCallback callback, object asyncState);
        
        void EndAddEmployee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/RemoveEmployee", ReplyAction="http://tempuri.org/IEmployeeService/RemoveEmployeeResponse")]
        void RemoveEmployee(Mvc2Fundamentals.EmployeeService.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEmployeeService/RemoveEmployee", ReplyAction="http://tempuri.org/IEmployeeService/RemoveEmployeeResponse")]
        System.IAsyncResult BeginRemoveEmployee(Mvc2Fundamentals.EmployeeService.Employee employee, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveEmployee(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeServiceChannel : Mvc2Fundamentals.EmployeeService.IEmployeeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Mvc2Fundamentals.EmployeeService.Employee> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Mvc2Fundamentals.EmployeeService.Employee>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEmployeeByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEmployeeByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mvc2Fundamentals.EmployeeService.Employee Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mvc2Fundamentals.EmployeeService.Employee)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeServiceClient : System.ServiceModel.ClientBase<Mvc2Fundamentals.EmployeeService.IEmployeeService>, Mvc2Fundamentals.EmployeeService.IEmployeeService {
        
        private BeginOperationDelegate onBeginGetAllDelegate;
        
        private EndOperationDelegate onEndGetAllDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEmployeeByIdDelegate;
        
        private EndOperationDelegate onEndGetEmployeeByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetEmployeeByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddEmployeeDelegate;
        
        private EndOperationDelegate onEndAddEmployeeDelegate;
        
        private System.Threading.SendOrPostCallback onAddEmployeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveEmployeeDelegate;
        
        private EndOperationDelegate onEndRemoveEmployeeDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveEmployeeCompletedDelegate;
        
        public EmployeeServiceClient() {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetAllCompletedEventArgs> GetAllCompleted;
        
        public event System.EventHandler<GetEmployeeByIdCompletedEventArgs> GetEmployeeByIdCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddEmployeeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveEmployeeCompleted;
        
        public System.Collections.Generic.List<Mvc2Fundamentals.EmployeeService.Employee> GetAll() {
            return base.Channel.GetAll();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAll(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAll(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Mvc2Fundamentals.EmployeeService.Employee> EndGetAll(System.IAsyncResult result) {
            return base.Channel.EndGetAll(result);
        }
        
        private System.IAsyncResult OnBeginGetAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAll(callback, asyncState);
        }
        
        private object[] OnEndGetAll(System.IAsyncResult result) {
            System.Collections.Generic.List<Mvc2Fundamentals.EmployeeService.Employee> retVal = this.EndGetAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCompleted(object state) {
            if ((this.GetAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCompleted(this, new GetAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllAsync() {
            this.GetAllAsync(null);
        }
        
        public void GetAllAsync(object userState) {
            if ((this.onBeginGetAllDelegate == null)) {
                this.onBeginGetAllDelegate = new BeginOperationDelegate(this.OnBeginGetAll);
            }
            if ((this.onEndGetAllDelegate == null)) {
                this.onEndGetAllDelegate = new EndOperationDelegate(this.OnEndGetAll);
            }
            if ((this.onGetAllCompletedDelegate == null)) {
                this.onGetAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDelegate, null, this.onEndGetAllDelegate, this.onGetAllCompletedDelegate, userState);
        }
        
        public Mvc2Fundamentals.EmployeeService.Employee GetEmployeeById(System.Guid id) {
            return base.Channel.GetEmployeeById(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetEmployeeById(System.Guid id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEmployeeById(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Mvc2Fundamentals.EmployeeService.Employee EndGetEmployeeById(System.IAsyncResult result) {
            return base.Channel.EndGetEmployeeById(result);
        }
        
        private System.IAsyncResult OnBeginGetEmployeeById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid id = ((System.Guid)(inValues[0]));
            return this.BeginGetEmployeeById(id, callback, asyncState);
        }
        
        private object[] OnEndGetEmployeeById(System.IAsyncResult result) {
            Mvc2Fundamentals.EmployeeService.Employee retVal = this.EndGetEmployeeById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEmployeeByIdCompleted(object state) {
            if ((this.GetEmployeeByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEmployeeByIdCompleted(this, new GetEmployeeByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEmployeeByIdAsync(System.Guid id) {
            this.GetEmployeeByIdAsync(id, null);
        }
        
        public void GetEmployeeByIdAsync(System.Guid id, object userState) {
            if ((this.onBeginGetEmployeeByIdDelegate == null)) {
                this.onBeginGetEmployeeByIdDelegate = new BeginOperationDelegate(this.OnBeginGetEmployeeById);
            }
            if ((this.onEndGetEmployeeByIdDelegate == null)) {
                this.onEndGetEmployeeByIdDelegate = new EndOperationDelegate(this.OnEndGetEmployeeById);
            }
            if ((this.onGetEmployeeByIdCompletedDelegate == null)) {
                this.onGetEmployeeByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEmployeeByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetEmployeeByIdDelegate, new object[] {
                        id}, this.onEndGetEmployeeByIdDelegate, this.onGetEmployeeByIdCompletedDelegate, userState);
        }
        
        public void AddEmployee(Mvc2Fundamentals.EmployeeService.Employee employee) {
            base.Channel.AddEmployee(employee);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddEmployee(Mvc2Fundamentals.EmployeeService.Employee employee, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddEmployee(employee, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddEmployee(System.IAsyncResult result) {
            base.Channel.EndAddEmployee(result);
        }
        
        private System.IAsyncResult OnBeginAddEmployee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Mvc2Fundamentals.EmployeeService.Employee employee = ((Mvc2Fundamentals.EmployeeService.Employee)(inValues[0]));
            return this.BeginAddEmployee(employee, callback, asyncState);
        }
        
        private object[] OnEndAddEmployee(System.IAsyncResult result) {
            this.EndAddEmployee(result);
            return null;
        }
        
        private void OnAddEmployeeCompleted(object state) {
            if ((this.AddEmployeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddEmployeeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddEmployeeAsync(Mvc2Fundamentals.EmployeeService.Employee employee) {
            this.AddEmployeeAsync(employee, null);
        }
        
        public void AddEmployeeAsync(Mvc2Fundamentals.EmployeeService.Employee employee, object userState) {
            if ((this.onBeginAddEmployeeDelegate == null)) {
                this.onBeginAddEmployeeDelegate = new BeginOperationDelegate(this.OnBeginAddEmployee);
            }
            if ((this.onEndAddEmployeeDelegate == null)) {
                this.onEndAddEmployeeDelegate = new EndOperationDelegate(this.OnEndAddEmployee);
            }
            if ((this.onAddEmployeeCompletedDelegate == null)) {
                this.onAddEmployeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddEmployeeCompleted);
            }
            base.InvokeAsync(this.onBeginAddEmployeeDelegate, new object[] {
                        employee}, this.onEndAddEmployeeDelegate, this.onAddEmployeeCompletedDelegate, userState);
        }
        
        public void RemoveEmployee(Mvc2Fundamentals.EmployeeService.Employee employee) {
            base.Channel.RemoveEmployee(employee);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveEmployee(Mvc2Fundamentals.EmployeeService.Employee employee, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveEmployee(employee, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveEmployee(System.IAsyncResult result) {
            base.Channel.EndRemoveEmployee(result);
        }
        
        private System.IAsyncResult OnBeginRemoveEmployee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Mvc2Fundamentals.EmployeeService.Employee employee = ((Mvc2Fundamentals.EmployeeService.Employee)(inValues[0]));
            return this.BeginRemoveEmployee(employee, callback, asyncState);
        }
        
        private object[] OnEndRemoveEmployee(System.IAsyncResult result) {
            this.EndRemoveEmployee(result);
            return null;
        }
        
        private void OnRemoveEmployeeCompleted(object state) {
            if ((this.RemoveEmployeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveEmployeeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveEmployeeAsync(Mvc2Fundamentals.EmployeeService.Employee employee) {
            this.RemoveEmployeeAsync(employee, null);
        }
        
        public void RemoveEmployeeAsync(Mvc2Fundamentals.EmployeeService.Employee employee, object userState) {
            if ((this.onBeginRemoveEmployeeDelegate == null)) {
                this.onBeginRemoveEmployeeDelegate = new BeginOperationDelegate(this.OnBeginRemoveEmployee);
            }
            if ((this.onEndRemoveEmployeeDelegate == null)) {
                this.onEndRemoveEmployeeDelegate = new EndOperationDelegate(this.OnEndRemoveEmployee);
            }
            if ((this.onRemoveEmployeeCompletedDelegate == null)) {
                this.onRemoveEmployeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveEmployeeCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveEmployeeDelegate, new object[] {
                        employee}, this.onEndRemoveEmployeeDelegate, this.onRemoveEmployeeCompletedDelegate, userState);
        }
    }
}
